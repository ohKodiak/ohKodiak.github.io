{"ast":null,"code":"var _jsxFileName = \"/Users/VPDiddy/Desktop/personalwebsite/ohKodiak.github.io/src/pages/NewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./NewPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EvenMore() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const handleInputChange = event => {\n    const sanitizedInput = sanitizeInput(event.target.value);\n    setInputValue(sanitizedInput);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const skillsRegex = /^(?!.*\\b(not|don't|do not|no)\\b)(?=.*\\b(skills|expertise|programming)\\b)/i;\n    const experienceRegex = /^(?!.*\\b(not|don't|do not|no)\\b)(?=.*\\b(job|jobs|experience|work|internship)\\b)/i;\n    const projectsRegex = /^(?!.*\\b(not|don't|do not|no)\\b)(?=.*\\b(projects)\\b)/i;\n    if (skillsRegex.test(inputValue)) {\n      setOutput(\"I have expertise in various programming languages and frameworks.\");\n    } else if (experienceRegex.test(inputValue)) {\n      setOutput(\"I have worked on several projects in the past, gaining valuable experience.\");\n    } else if (projectsRegex.test(inputValue)) {\n      setOutput(\"I have developed several projects, including web applications and mobile apps.\");\n    } else {\n      setOutput(\"I'm sorry, I don't have an answer for that input.\");\n    }\n  };\n  const sanitizeInput = input => {\n    // Remove any potential malicious content\n    const sanitizedInput = input.replace(/<[^>]*>/g, \"\"); // Remove HTML tags\n    const safeInput = sanitizedInput.replace(/[^a-zA-Z0-9\\s.,?!]/g, \"\"); // Remove non-alphanumeric characters except some punctuation\n\n    return safeInput;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"first-header\",\n      children: \"Ask me more about my skills, experience, or projects in the text box below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"centered-container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"centered-textbox\",\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cool-button\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"output-response\",\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(EvenMore, \"ctczvhh0C9cZ30f6jTACywyENWQ=\");\n_c = EvenMore;\nexport default EvenMore;\nvar _c;\n$RefreshReg$(_c, \"EvenMore\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EvenMore","_s","inputValue","setInputValue","output","setOutput","handleInputChange","event","sanitizedInput","sanitizeInput","target","value","handleSubmit","preventDefault","skillsRegex","experienceRegex","projectsRegex","test","input","replace","safeInput","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/VPDiddy/Desktop/personalwebsite/ohKodiak.github.io/src/pages/NewPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./NewPage.css\";\n\nfunction EvenMore() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    const sanitizedInput = sanitizeInput(event.target.value);\n    setInputValue(sanitizedInput);\n  };\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n  \n    const skillsRegex = /^(?!.*\\b(not|don't|do not|no)\\b)(?=.*\\b(skills|expertise|programming)\\b)/i;\n    const experienceRegex = /^(?!.*\\b(not|don't|do not|no)\\b)(?=.*\\b(job|jobs|experience|work|internship)\\b)/i;\n    const projectsRegex = /^(?!.*\\b(not|don't|do not|no)\\b)(?=.*\\b(projects)\\b)/i;\n  \n    if (skillsRegex.test(inputValue)) {\n      setOutput(\"I have expertise in various programming languages and frameworks.\");\n    } else if (experienceRegex.test(inputValue)) {\n      setOutput(\"I have worked on several projects in the past, gaining valuable experience.\");\n    } else if (projectsRegex.test(inputValue)) {\n      setOutput(\"I have developed several projects, including web applications and mobile apps.\");\n    } else {\n      setOutput(\"I'm sorry, I don't have an answer for that input.\");\n    }\n  };\n  \n  const sanitizeInput = (input) => {\n    // Remove any potential malicious content\n    const sanitizedInput = input.replace(/<[^>]*>/g, \"\"); // Remove HTML tags\n    const safeInput = sanitizedInput.replace(/[^a-zA-Z0-9\\s.,?!]/g, \"\"); // Remove non-alphanumeric characters except some punctuation\n  \n    return safeInput;\n  };\n  \n\n  return (\n    <div>\n      <h1 className=\"first-header\">Ask me more about my skills, experience, or projects in the text box below.</h1>\n      <form className=\"centered-container\" onSubmit={handleSubmit}>\n        <input className=\"centered-textbox\" type=\"text\" value={inputValue} onChange={handleInputChange} />\n        <button className=\"cool-button\" type=\"submit\">Submit</button>\n      </form>\n      <p className = \"output-response\">{output}</p>\n    </div>\n  );\n}\n\nexport default EvenMore;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,cAAc,GAAGC,aAAa,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IACxDR,aAAa,CAACK,cAAc,CAAC;EAC/B,CAAC;EAED,MAAMI,YAAY,GAAIL,KAAK,IAAK;IAC9BA,KAAK,CAACM,cAAc,CAAC,CAAC;IAEtB,MAAMC,WAAW,GAAG,2EAA2E;IAC/F,MAAMC,eAAe,GAAG,kFAAkF;IAC1G,MAAMC,aAAa,GAAG,uDAAuD;IAE7E,IAAIF,WAAW,CAACG,IAAI,CAACf,UAAU,CAAC,EAAE;MAChCG,SAAS,CAAC,mEAAmE,CAAC;IAChF,CAAC,MAAM,IAAIU,eAAe,CAACE,IAAI,CAACf,UAAU,CAAC,EAAE;MAC3CG,SAAS,CAAC,6EAA6E,CAAC;IAC1F,CAAC,MAAM,IAAIW,aAAa,CAACC,IAAI,CAACf,UAAU,CAAC,EAAE;MACzCG,SAAS,CAAC,gFAAgF,CAAC;IAC7F,CAAC,MAAM;MACLA,SAAS,CAAC,mDAAmD,CAAC;IAChE;EACF,CAAC;EAED,MAAMI,aAAa,GAAIS,KAAK,IAAK;IAC/B;IACA,MAAMV,cAAc,GAAGU,KAAK,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;IACtD,MAAMC,SAAS,GAAGZ,cAAc,CAACW,OAAO,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC,CAAC;;IAErE,OAAOC,SAAS;EAClB,CAAC;EAGD,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAIuB,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAC;IAA2E;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7G3B,OAAA;MAAMuB,SAAS,EAAC,oBAAoB;MAACK,QAAQ,EAAEf,YAAa;MAAAS,QAAA,gBAC1DtB,OAAA;QAAOuB,SAAS,EAAC,kBAAkB;QAACM,IAAI,EAAC,MAAM;QAACjB,KAAK,EAAET,UAAW;QAAC2B,QAAQ,EAAEvB;MAAkB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClG3B,OAAA;QAAQuB,SAAS,EAAC,aAAa;QAACM,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACP3B,OAAA;MAAGuB,SAAS,EAAG,iBAAiB;MAAAD,QAAA,EAAEjB;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACzB,EAAA,CA9CQD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}